// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CobrowseIO
@_exported import CobrowseIO
import Starscream
import Swift
import SwiftCBOR
@objc public class CBORSocket : ObjectiveC.NSObject {
  @objc public var maxReconnectDelay: Swift.Double
  @objc public var minReconnectDelay: Swift.Double
  @objc public init(request: @escaping (() -> Foundation.URLRequest))
  @objc public func onMessage(_ event: Swift.String, listener: @escaping (Foundation.NSDictionary) -> ())
  @objc public func onConnect(_ listener: @escaping (() -> ()))
  @objc public func onDisconnect(_ listener: @escaping ((Swift.Error?) -> ()))
  @objc public func messageLag() -> Swift.UInt64
  @objc public func isConneced() -> Swift.Bool
  @objc public func disconnect()
  @objc public func send(_ event: Swift.String, data: Swift.Dictionary<Swift.String, Any>, completion: (() -> ())?)
  @objc public func sendPing()
  @objc override dynamic public init()
  @objc deinit
}
extension CBORSocket : Starscream.WebSocketDelegate {
  public func websocketDidConnect(socket: Starscream.WebSocketClient)
  public func websocketDidDisconnect(socket: Starscream.WebSocketClient, error: Swift.Error?)
  public func websocketDidReceiveMessage(socket: Starscream.WebSocketClient, text: Swift.String)
  public func websocketDidReceiveData(socket: Starscream.WebSocketClient, data: Foundation.Data)
}
