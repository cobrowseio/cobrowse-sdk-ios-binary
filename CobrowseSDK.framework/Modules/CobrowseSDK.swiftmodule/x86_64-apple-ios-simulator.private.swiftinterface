// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CobrowseSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import CobrowseSDK
import Combine
import CommonCrypto
import CoreFoundation
import Foundation
import Security
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import zlib
@objc public class CBORSocket : ObjectiveC.NSObject {
  @objc public var maxReconnectDelay: Swift.Double
  @objc public var minReconnectDelay: Swift.Double
  @objc(initWithSession:request:) public init(with session: Foundation.URLSession, request: @escaping (() -> Foundation.URLRequest))
  @objc public func onMessage(_ event: Swift.String, listener: @escaping (Foundation.NSDictionary) -> ())
  @objc public func onConnect(_ listener: @escaping (() -> ()))
  @objc public func onDisconnect(_ listener: @escaping (((any Swift.Error)?) -> ()))
  @objc public func messageLag() -> Swift.UInt64
  @objc public func isConneced() -> Swift.Bool
  @objc public func disconnect()
  @objc public func send(_ event: Swift.String, data: Swift.Dictionary<Swift.String, Any>, completion: (() -> ())?)
  @objc public func sendPing()
  @objc deinit
}
@available(iOS 14.0, *)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func cobrowseUnredacted(if condition: Swift.Bool = true) -> some SwiftUICore.View
  
}
@available(iOS 14.0, *)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func cobrowseSelector(tag: Swift.String? = nil, id: Swift.String? = nil, classes: [Swift.String] = [], attributes: [Swift.String : Any] = [:]) -> some SwiftUICore.View
  
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class CBIOViewPropertiesTree : ObjectiveC.NSObject {
  @objc @_Concurrency.MainActor public static let shared: CobrowseSDK.CBIOViewPropertiesTree
  @objc final public let root: CobrowseSDK.CBIOViewProperties
  @objc public func childIDs(_ view: CobrowseSDK.CBIOViewProperties) -> [Swift.String]
  @objc public func depthFirst(visit: ((CobrowseSDK.CBIOViewProperties) -> (Swift.Void)), node: CobrowseSDK.CBIOViewProperties)
  @objc deinit
}
public func descendant<T>(for object: Any, descendants: Swift.String..., log: Swift.Bool = false) -> T?
@objc @_inheritsConvenienceInitializers @available(iOS 14.0, macOS 10.15, *)
public class SelectorObserver : ObjectiveC.NSObject {
  @objc public static func notifyObservers()
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @available(iOS 14.0, *)
@objc public class CBIOSwiftUIRedaction : ObjectiveC.NSObject {
  @objc public static func getRedactedViews() -> [UIKit.UIView]
  @objc public static func getUnredactedViews() -> [UIKit.UIView]
  @objc override dynamic public init()
  @objc deinit
}
@available(iOS 14.0, *)
extension UIKit.UIView {
  @discardableResult
  @objc @_Concurrency.MainActor @preconcurrency dynamic public func cobrowseRedacted() -> UIKit.UIView
}
@available(iOS 14.0, *)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func cobrowseRedacted(if condition: Swift.Bool = true) -> some SwiftUICore.View
  
}
